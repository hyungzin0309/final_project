<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop">
    <select id="selectShopList" parameterType="map" resultType="map">
        select
            *
        from
            shop_info
        where
            location_x <![CDATA[<]]> ${maxLocationX}
            and
            location_y <![CDATA[<]]> ${maxLocationY}
            and
            id != #{id}
    </select>
    
    <select id="searchHashTag" parameterType="hashtag" resultType="hashtag">
    	select
    		*
   		from
   			hashtag
  		where
  			tag_name = #{tagName} 	
    </select>
    
    <select id="searchShopHashTag" parameterType="hashtag" resultType="hashtag">
        	select
    		*
   		from
   			shophashtag
  		where
  			tag_id = #{tagId} 
  			and
  			member_id = #{memberId}	
    </select>
    
    <insert id="insertHashTag" parameterType="hashtag">
    	insert into
    		hashtag
   		values(concat(#{tagId}, seq_hashtag.nextval), #{tagName})
    </insert>
    
    <insert id="insertShopHashTag" parameterType="hashtag">
        <selectKey order="BEFORE" resultType="string" keyProperty="tagId">
        	select
        		tag_id
       		from
       			hashtag
      		where
      			tag_name = #{tagName}
        </selectKey>
        insert into
            shophashtag
        values(#{memberId}, #{tagId})
    </insert>
    
    <select id="selectShopHashTag" parameterType="string" resultType="hashtag">
    	select
    		*
    	from
    		shophashtag s left join hashtag h on s.tag_id = h.tag_id
    	where
    		member_id = #{memberId}    
    </select>
    
    <select  id="selectHashTagList" resultType="hashtag">
        select 
            * 
        from
            hashtag 
        where 
            tag_name like #{search} || '%'
    
    </select>
    
    <insert id="insertShopTable" parameterType="table">
    	insert into shop_table_setting
    	values(#{shopId}, concat('table-', seq_shop_table_setting.nextval), #{tableName}, #{allowVisitor}, #{allowStart}, #{allowEnd}, #{timeDiv}, #{timeMax}, #{memo}, #{enable})
    </insert>
    
    <select id="verifyTableName" parameterType="table" resultType="string">
    	select
    		table_name
   		from
   			shop_table_setting
  		where
  			shop_id = #{shopId}
  			and
  			table_name = #{tableName}
    </select>
    
    <select id="selectShopTableList" parameterType="string" resultType="table">
    	select
    		*
   		from
   			shop_table_setting
		where
			shop_id = #{id}
		order by
			table_name
    </select>
    
    <delete id="deleteShopTable" parameterType="string">
    	delete from
   			shop_table_setting
		where
			table_id = #{tableId}
    </delete>
    
    <update id="updateShopTable" parameterType="table">
    	update shop_table_setting
    	set
    		<if test="updatable.equals('Y')">		
    		table_name = #{tableName},
    		allow_visitor = #{allowVisitor},
    		allow_start = #{allowStart},
    		allow_end = #{allowEnd},
    		time_div = #{timeDiv},
    		time_max = #{timeMax},
    		</if>
    		memo = #{memo},
    		enable = #{enable}
    	where
    		table_id = #{tableId}
    </update>
    
    <select id="selectOneTable" parameterType="table" resultType="table">
    	select
    		*
   		from
   			shop_table_setting
  		where
  			table_id = #{tableId}
    </select>
    
    <select id="selectHashTagShopList" parameterType="map" resultType="map">
        select
            *
        from
            shop_info i
  		  	left join shophashtag s on i.id = s.member_id 
    		left join hashtag h on s.tag_id = h.tag_id 
        <where>
         	i.location_x <![CDATA[<]]> ${maxLocationX}
            and
            i.location_y <![CDATA[<]]> ${maxLocationY}
            and
            i.id != #{id}
            and
            h.tag_name in
            <foreach collection="tags" item="tags" open="(" close =")" separator=",">
            #{tags}
            </foreach>
        </where>
    </select>
    
    <insert id="insertReservation" parameterType="reservation">
    	insert into shop_table_reservation
    	values(
    		concat(#{shopId}, seq_shop_table_reservation_res_no.nextval),
    		#{reservationTableId},
    		#{reservationUser},
    		#{shopId},
    		#{reservationDate},
    		#{timeStart},
    		#{timeEnd},
    		#{visitorCount},
    		#{reqOrder},
    		default
    	)
    </insert>

	<select id="selectTableReservation" parameterType="map" resultType="reservation">
		select
			*
		from
			shop_table_reservation
		where
			reservation_table_id = #{tableId}			
			<if test="date != null">
			and
			to_date(reservation_date) = #{date}
			</if>
	</select>
	
	<select id="shopReservationCount" parameterType="string" resultType="int">
		select
			count(*)
		from
			shop_table_reservation
		where
			shop_id = #{shopId}
			and
			reservation_date > sysdate-1	
	</select>
	
	<select id="selectShopReservationListByDate" parameterType="map" resultType="reservation">
		select
			*
		from
			shop_table_reservation
		where
			shop_id = #{shopId}
			and
			to_date(reservation_date) = #{date}
	</select>
</mapper>