<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="group">

	<select id="selectOneGroup" resultType="group">
		select
			*
		from
			group_
		 where
		 	group_id = #{groupId}
	</select>
	<insert id="insertOneGroup">
		insert into
			group_
		values(
    		#{groupId},
    		#{groupName},
    		#{leaderId},
    		default,
    		default,
    		#{hashtag},
    		#{image}
		)
		
	</insert>
		
	<select id="selectGroupList" resultType="group">
	select
    	g.*
	from
    	group_ g join group_member_list gml
        	on g.group_id = gml.group_id
	where
    	gml.member_id = #{id}
	</select>

	<insert id="insertGroupBoard">
		insert into
			group_board
		values(
			seq_group_board.nextVal,
			#{groupId},
			#{writer},
			#{content},
			default,
			default,
			#{placeName},
			#{placeAddress},
			#{locationY},
			#{locationX},
			#{image},
			#{tagMembers}			
		)
		<selectKey order="AFTER" resultType="_int" keyProperty="no">  <!-- insert문 이후에 실행할게요, GroupBoard객체의 no필드에 세팅할게요 -->
			select
				seq_group_board.currval
			from
				dual
		</selectKey>
	</insert>
	<select id="selectOneBoard" resultType="groupBoard">
		select
			g.*,
			m.picture writer_profile
		from
			group_board g join member m
			on g.writer = m.id
		where
			g.no = #{no}
	</select>
	<select id="selectTagMemberList" resultType="member">
		select
			*
		from
			member
		<where>
			<if test="tagMembers != null">
				id in 
				<foreach collection="tagMembers" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>	
			</if>		
		</where>
	</select>
	<select id="selectGroupMemberList" resultMap="groupMemberListMap">
		select
			id, member_level_code, picture
		from
			member m join group_member_list gml
			on m.id = gml.member_id
		where
			gml.group_id = #{groupId}
	</select>
 	<resultMap type="map" id="groupMemberListMap">
        <result column="id" property="memberId"/>
		<result column="picture" property="profile"/>
        <result column="member_level_code" property="memberLevelCode"/>
	</resultMap>
	
	
	<select id="selectGroupBoardList" resultType="groupBoard">
	select
		*
	from
		group_board
	where
		group_id = #{groupId}
	order by no desc
	</select>
	
	<insert id="insertEnrollGroupForm" parameterType="map">
	insert into
		group_apply_list
	values(
		seq_group_apply_list.nextVal,
		#{groupId},
		#{memberId},
		#{content},
		default,
		default,
		default
		)
	</insert>
	
	<select id="getGroupApplyRequest" resultType="map">
	select
		*
	from
		group_apply_list
	where
		group_id = #{groupId}
		and 
		approval_yn = 'N'
	order by
		no 
	</select>

  <insert id="insertGroupBoardComment">
		insert into
			group_board_comment
		values(
			seq_group_board_comment.nextval,
			#{boardNo},
			#{commentLevel},
			#{writer},
			#{content},
			<choose>
				<when test="commentRef eq 0">
					null,
				</when>
				<otherwise>
					#{commentRef},
				</otherwise>
			</choose>
			default
		)
	</insert>
	<select id="selectGroupBoardCommentList" resultType="groupBoardComment">
		select
			*
		from
			group_board_comment
		where
				board_no = #{boardNo}
		start with
			comment_level = 1
		connect by prior
			no = comment_ref -- level=1의 no와 나머지(level=2)의 comment_ref를 기준으로 연결
		order siblings by
			no   -- 형제요소끼리의 정렬 기준
	</select>
	<delete id="deleteBoardComment">
		delete from
			group_board_comment
		where
			no=#{no}
	</delete>
	
	<insert id="insertGroupMember" parameterType="map">
		insert into
			group_member_list
		values(
			#{groupId},
			#{memberId},
			default
		)
	</insert>
	
	<delete id="deleteGroupApplyList">
		delete from 
			group_apply_list 
		where 
			member_id = #{memberId}
			and
			group_id = #{groupId}
	</delete>
	
	<delete id="deleteGroupBoard">
		delete from
			group_board
		where
			no = #{no}
	</delete>
	<update id="updateBoardContent">
		update
			group_board
		set
			content=#{content}
		where
			no=#{no}
	</update>

	<select id="groupMemberList" resultType="map">
		select 
		    m.picture,
		    gml.*
		from 
		    member m join group_member_list gml
		        on m.id = gml.member_id
		where
		    group_id = #{groupId}
	</select>
	
	<select id="selectGroupInfo" resultType="group">
		select
			*
		from
			group_
		where
			group_id = #{groupId}
	</select>
	
	<select id="groupMemberList2" resultType="map">
		select 
		    m.picture,
		    gml.*
		from 
		    member m join group_member_list gml
		        on m.id = gml.member_id
		where
		    group_id = #{groupId}
		order by 
            (
            CASE member_level_code
            WHEN 'ld' THEN 0
            WHEN 'mg' THEN 1
            ELSE 2
            END
                ) 
	</select>

	<select id="selectOneLikeLog" resultMap="likeLog">
	select
		*
	from
		group_board_like
	where
		board_no = #{boardNo}
		and
		member_id = #{memberId}
	</select>
	
	<resultMap type="map" id="likeLog">
		<result column="board_no" property="boardNo"/>
		<result column="member_id" property="memberId"/>
	</resultMap>
	
	<delete id="deleteLikeLog">
		delete from
			group_board_like
		where
			board_no = #{boardNo}
			and
			member_id = #{memberId}
	</delete>
	<insert id="insertLikeLog">
		insert into
			group_board_like
		values(
			#{boardNo},#{memberId}
		)
	</insert>
	
	<select id="selectLikeCount" resultType="_int">
	select
		count(*)
	from(
		select
			*
		from
			group_board_like
		where
			board_no = #{no}
		)	
	</select>
	
	<delete id="deleteGroupMember">
	delete from 
		group_member_list 
	where 
		member_id = #{memberId}
	</delete>
	
	<update id="updateGroupGrade">
	update 
	    group_member_list 
	set 
	    member_level_code = #{memberLevelCode} 
	where 
	    member_id = #{memberId} 
	    and 
	    group_id = #{groupId}
	</update>
	
	<update id="updateGroup">
	update 
		group_
	set
		group_id = #{groupId},
		group_name = #{groupName},
		hashtag = #{hashtag},
		image = #{image},
		leader_id = #{leaderId}
	where
		group_id = #{groupId}
	</update>

</mapper>

