<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<insert id="memberEnroll">
		insert into member values
		(#{id}, #{password}, #{name}, #{picture}, #{personalId}, #{accountType}, #{addressFull}, #{addressAll}, #{introduce}, default, #{locationX}, #{locationY})
	</insert>


	<update id="updateMember">
		 update member set
			 name = #{name},
			 picture = #{picture},
			 address_full = #{addressFull},
			 address_all = #{addressAll},
			 introduce = #{introduce},
			 location_x = #{locationX},
			 location_y = #{locationY}
		 where 
		 	id = #{id}	
	</update>

     <update id= "updatePersonality">
     update personality
     set
     	personality = #{personality}
     where
     	member_id = #{id}
     </update>
	
	<update id="updateInterest">
	update interest
     set
     	interest = #{interest}
     where
     	member_id = #{id}
	</update>

	<select id="selectPersonality" parameterType="string" resultType="member">
		select *
		from
			personality
		where
			member_id = #{id}
	</select>

	<insert id="insertPersonality">
		insert into
			personality
		(member_id, personality)
		values (#{id}, #{personality}) 
	</insert>

	<insert id="insertInterest">
		insert into
			interest 
			(member_id, interest)
		values (#{id}, #{interest})
	</insert>

	<insert id="addFollowing" parameterType ="map">
		insert into
		follower 
		values
		(#{friendId}, #{myId})
	
	</insert>

	<select id="countFollowing" parameterType="string" resultType="_int">
		select 
			count(*)
		from
			follower
		where
			member_id = #{friendId}
	</select>

	<select id="countFollower" parameterType="string" resultType="_int">
		select
			count(*)
		from
			follower
		where
			following_id = #{myId}
	
	</select>
 
	<select id="selectOneMember" parameterType="string" resultType="member">
		select
		 *
		from
			member m full outer join personality p
		on m.id = p.member_id
			full outer join interest i
		on m.id = i.member_id
		where
			id = #{id}
	</select>

	<select id="followerList" resultType="follower">
	select
		*
	from
		follower
	where
		member_id = #{friendId}
	</select>

	<select id="followingList" resultMap="memberMap">
select 
    *
from
    member m left join follower f
on 
        m.id = f.member_id
where 
    f.following_id = #{friendId}
	</select>


<resultMap type="member" id="memberMap">
	<id column = "id" property ="id"/>
	<result column= "password" property="password"/>
	<result column= "name" property="name"/>
	<result column= "picture" property="picture"/>
	<result column= "personal_id" property="personalId"/>
	<result column= "account_type" property="accountType"/>
	<result column= "address_full" property="addressFull"/>
	<result column= "address_all" property="addressAll"/>
	<result column= "introduce" property="introduce"/>
	<result column= "enabled" property="enabled"/>
	<result column= "location_X" property="locationX"/>
	<result column= "location_Y" property="locationY"/>

	<collection property="followers" ofType="follower">
		<result column="member_Id" property="memberId"/>
		<result column="following_Id" property="followingId"/>
	</collection>
</resultMap>

	<select id="selectOneShopInfo" parameterType="string" resultType="shop">
		select
			*
		from
			shop_info
		where
			id = #{id}
	</select>

	
	<update id="updateShopInfo" parameterType="shop">
		update shop_info
		set bussiness_hour_start = #{bussinessHourStart}, bussiness_hour_end = #{bussinessHourEnd}, location_x = #{locationX}, location_y = #{locationY}, address = #{address}, address_detail = #{addressDetail},
		shop_introduce = #{shopIntroduce}
		where id = #{id}
	</update>

	<insert id="insertShopInfo" parameterType="string">
		insert into shop_info (id)
		values(#{id})
	</insert>

	<insert id= "insertMemberBoard" parameterType="board">
		insert into board (no,writer, content,picture)
		values (seq_board_no.nextval, #{writer}, #{content}, #{picture})
	</insert>


	<update id="updatePassword">
		update member
		set password = #{password}
		where id = #{id}
	</update>

	<select id= "selectBoardList" resultType = "board">
		select 
			*
		from
			board
		where
			writer = #{id}
		order by reg_date desc
	</select>
	
	<select id="selectOneBoard" resultType = "board">
		select 
			b.*,
			m.picture writer_profile
		from
			board b join member m
			on b.writer = m.id
		where
			b.no = #{no}
	</select>

	<insert id="enrollBoardComment">
	insert into
			 board_comment
		values(
			seq_board_comment_no.nextval,
			#{boardNo},
			#{commentLevel},
			#{writer},
			#{content},
			<choose>
				<when test="commentRef eq 0">
					null,
				</when>
				<otherwise>
					#{commentRef},
				</otherwise>
			</choose>
			default
		)
	</insert>

	<delete id="deleteBoard">
	delete from
			board
		where
			no = #{no}
	</delete>

	<select id="selectBoardCommentList" resultType="boardComment">
		select
			*
		from
			board_comment
		where
				board_no = #{boardNo}
		start with
			comment_level = 1
		connect by prior
			no = comment_ref 
		order siblings by
			no  
	</select>
	
		<delete id="deleteBoardComment">
		delete from
			board_comment
		where
			no=#{no}
	</delete>

	<update id="updateBoardContent">
		update
				board
		set
			content=#{content}
		where
			no=#{no}
	</update>
	
		<insert id="insertLikeLog">
		insert into
			 board_like
		values(
			#{boardNo},#{memberId}
		)
	</insert>

</mapper>